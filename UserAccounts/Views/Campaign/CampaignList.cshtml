@model PagedList.IPagedList<UserAccounts.Models.CampaignModel>
@using Microsoft.AspNet.Identity
@using PagedList.Mvc
@using Westwind.Web.Markdown
@using SelectList = System.Web.Mvc.SelectList
@{
    ViewBag.Title = @Resources.Campaign.Campaigns;
}

<h2 class="page-header">
    @ViewBag.Title
</h2>

<div class="header-button-container">
    @Html.ActionLink(Resources.Campaign.CreateNew, "Create", null, new { @class = "btn btn-outline-secondary" })
</div>

<h5 style="margin-top: 10px">@Resources.Campaign.SortBy</h5>
<div style="margin-left: 5px">
    @Html.ActionLink(Resources.Campaign.Name, null, new { sortOrder = "Name"})

    @Html.ActionLink(Resources.Campaign.Date, null, new { sortOrder = "CreatedOn" })

    @Html.ActionLink(Resources.Campaign.RequiredSum, null, new { sortOrder = "RequiredSum" })
</div>

@foreach (var item in Model)
{
    var progress = (int)(item.CurrentSum / item.RequiredSum * 100);
    <table class="table campaign-list">
        <tr>
            <td class="caption">
                <div class="control-label">
                    @Html.ActionLink(item.Name, "Details", new { id = item.Id })
                </div>
            </td>
        </tr>
        <tr>
            <td class="caption">
                <img src="@item.ImageUrl" />
            </td>
        </tr>
        <tr>
            <td>
                @Html.Raw(Markdown.Parse(item.ShortenedDescription))
                @Html.ActionLink(Resources.Campaign.ShowMore, "Details", new { id = item.Id })
            </td>
        </tr>
        <tr>
            <td>
                <b>@Resources.Campaign.WeNeed <i>$@item.RequiredSum</i>.</b>
            </td>
        </tr>

        <tr>
            <td>
                <div class="progress">
                    <div class="progress-bar" style="width: @progress%">($@item.CurrentSum) @progress%</div>
                </div>
            </td>
        </tr>
    </table>
}
<div id='Paging' style="text-align: center">
    <div class="pagination-header">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount
    </div>

    @Html.PagedListPager(Model, page => Url.Action("CampaignList", new { page, sortOrder = ViewBag.CurrentSort }), new PagedListRenderOptions
    {
        FunctionToTransformEachPageLink = (liTag, aTag) =>
        {
            aTag.Attributes.Add("class", "page-link");
            liTag.InnerHtml = aTag.ToString();
            return liTag;
        },
        LiElementClasses = new[] { "page-item" },
        UlElementClasses = new[] { "pagination justify-content-center" }
    })
</div>
