@model IEnumerable<UserAccounts.Models.UserListViewModel>

@{
    ViewBag.Title = "UserList";
}

<meta charset="utf-8">
<ul class="nav justify-content-end">
    <nav class="navbar-brand">

        <button type="button" class="btn btn-success" onclick="Unlocking()">Unblock</button>
        <button type="button" class="btn btn-warning" onclick="Locking()">Block</button>
        <button type="button" class="btn btn-danger" onclick="Delete()">Delete</button>

    </nav>
</ul>
<table class="table">
        <tr>
            <th>
                <input id="checkall" type="checkbox" />
            </th>
            <th>
                User name
            </th>
            <th>
                Status
            </th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <input class="checkbox" type="checkbox" name="statuses" value="@item.Id">
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
            </tr>
        }

    </table>


<script type="text/javascript">

    function Locking()
    {
        $.ajax({
            type: 'POST',
            url: "@Url.Action("LockUser", "Account")",
            data: { arr: getCheckedCheckBoxes() },
            success: function (data) {
                if (data === "True") {
                    location.reload();
                }
                else {

                }
            },
            error: function () {
                alert("Error");
            }
        });
    }

    function Unlocking()
    {
        $.ajax(
            {
                type: 'POST',
                url: "@Url.Action("UnLockUser", "Account")",
                data: { arr: getCheckedCheckBoxes() },
                success: function (data) {
                    if (data === "True") {
                        location.reload();
                    }
                    else {

                    }
                },
                error: function () {
                    alert("Error");
                }
            }
        );
    }

    function Delete()
    {
        $.ajax(
            {
                type: 'POST',
                url: "@Url.Action("DeleteUser", "Account")",
                data: { arr: getCheckedCheckBoxes() },
                success: function (data) {
                    if (data === "True") {
                        location.reload();
                    }
                    else {

                    }
                },
                error: function () {
                    alert("Error");
                }
            }
        );
    }

    function getCheckedCheckBoxes()
    {
        var checkboxes = document.getElementsByClassName('checkbox');
        var checkboxesChecked = [];
        for (var index = 0; index < checkboxes.length; index++)
        {
            if (checkboxes[index].checked)
            {
                checkboxesChecked.push(checkboxes[index].value);
            }
        }
        return checkboxesChecked;
    }

    $(document).ready(function(){
        $("#checkall").change(function(){
            var checked = $(this).is(':checked');
            if(checked){
                $(".checkbox").each(function(){
                    $(this).prop("checked",true);
                });
            }else{
                $(".checkbox").each(function(){
                    $(this).prop("checked",false);
                });
            }
        });

        $(".checkbox").click(function(){

            if($(".checkbox").length == $(".checkbox:checked").length) {
                $("#checkall").prop("checked", true);
            } else {
                $("#checkall").prop("checked", false);
            }

        });
    });
</script>
